from aiogram import Router, F
from aiogram.types import Message, LabeledPrice, PreCheckoutQuery

router = Router()

# –¢–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –ø–ª–∞—Ç–µ–∂–Ω–æ–≥–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω)
PROVIDER_TOKEN = "1744374395:TEST:29aa7cf2ee47b5c011a7"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–æ–≤–∞—Ä–∞
PRICES = [LabeledPrice(label="–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –±–æ—Ç–∞", amount=10000)]  # 100 —Ä—É–±–ª–µ–π (–≤ –∫–æ–ø–µ–π–∫–∞—Ö)

@router.message(F.text.in_({"/donate", "üí∞ –î–æ–Ω–∞—Ç"}))  # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏ –∫–æ–º–∞–Ω–¥—É, –∏ —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
async def donate_handler(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /donate –∏ –∫–Ω–æ–ø–∫–∏ "üí∞ –î–æ–Ω–∞—Ç". –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å—á–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é."""
    try:
        await message.answer_invoice(
            title="–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –±–æ—Ç–∞",
            description="–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞! ‚ù§Ô∏è",
            payload="donation_payload",  # –ü–æ–ª–µ–∑–Ω–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–ª–∞—Ç–µ–∂–∞
            provider_token=PROVIDER_TOKEN,
            currency="RUB",  # –í–∞–ª—é—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, RUB –¥–ª—è —Ä—É–±–ª–µ–π)
            prices=PRICES,
            start_parameter="donation"
        )
    except Exception as e:
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—á–µ—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        print(f"–û—à–∏–±–∫–∞: {e}")

@router.pre_checkout_query()
async def pre_checkout_handler(pre_checkout_query: PreCheckoutQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–µ–¥–æ–ø–ª–∞—Ç—ã. –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç –ø–ª–∞—Ç–µ–∂."""
    await pre_checkout_query.answer(ok=True)

@router.message(F.successful_payment)
async def successful_payment_handler(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞."""
    await message.answer("–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –¥–æ–Ω–∞—Ç! –í—ã –ø–æ–º–æ–≥–∞–µ—Ç–µ —Ä–∞–∑–≤–∏—Ç–∏—é –±–æ—Ç–∞! ‚ù§Ô∏è")